//breadth first search in graph representing it with adjacency matrix
#include <vector>
#include <iostream>
#include<queue>
#include <algorithm>
using namespace std;
int n;
void bfs(int s,vector<vector<int>>arr, vector<bool>&a);

int main() {
    int m,u,v;
    cin>>n>>m;
    vector<vector<int>>arr(n,vector<int>(n,0)) ;
    vector<bool>a(n,false);
   // int arr[n][n] = {0};
    for(int i=0;i<m;i++)
    {
        cin>>u>>v;
        arr[u][v]=1;
    }
    int s;
    cin>>s;
    bfs(s,arr,a);
    for(int i=0; i<n; i++){
        if( !a[i] ){
            s = i;
            bfs(s,arr,a);
        }
    }
    return 0;
}
void bfs(int s,vector<vector<int>>arr, vector<bool>&a)
{
    
    queue<int>q;
    q.push(s);
    a[s]=1;
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        for(int i=0;i<n;i++)
        {
            if((arr[u][i] && (!a[i])))
            {
                q.push(i);
                a[i]=1;
            }
        }
        cout<<u<<" ";
    }
}
